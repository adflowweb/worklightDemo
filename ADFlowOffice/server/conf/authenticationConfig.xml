<?xml version="1.0" encoding="UTF-8"?>
<tns:loginConfiguration xmlns:tns="http://www.worklight.com/auth/config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<!-- Licensed Materials - Property of IBM 5725-I43 (C) Copyright IBM Corp. 
		2006, 2013. All Rights Reserved. US Government Users Restricted Rights - 
		Use, duplication or disclosure restricted by GSA ADP Schedule Contract with 
		IBM Corp. -->

	<!-- Uncomment the next element to protect the worklight console and the 
		first section in securityTests below. -->
	<staticResources>
		<!-- <resource id="worklightConsole" securityTest="WorklightConsole"> <urlPatterns>/console*</urlPatterns> 
			</resource> -->
		<resource id="subscribeServlet" securityTest="SubscribeServlet">
			<urlPatterns>/subscribeSMS*;/receiveSMS*</urlPatterns>
		</resource>
	</staticResources>

	<!-- Sample security tests Even if not used there will be some default webSecurityTest 
		and mobileSecurityTest Attention: if using <testAppAuthenticity/> test below 
		,<publicSigningKey> element must be added to application-descriptor.xml as 
		well. -->

	<securityTests>
		<!-- <customSecurityTest name="WorklightConsole"> <test realm="WorklightConsole" 
			isInternalUserID="true"/> </customSecurityTest> <mobileSecurityTest name="mobileTests"> 
			<testAppAuthenticity/> <testDeviceId provisioningType="none" /> <testUser 
			realm="myMobileLoginForm" /> </mobileSecurityTest> <webSecurityTest name="webTests"> 
			<testUser realm="myWebLoginForm"/> </webSecurityTest> <customSecurityTest 
			name="customTests"> <test realm="wl_antiXSRFRealm" step="1"/> <test realm="wl_authenticityRealm" 
			step="1"/> <test realm="wl_remoteDisableRealm" step="1"/> <test realm="wl_anonymousUserRealm" 
			isInternalUserID="true" step="1"/> <test realm="wl_deviceNoProvisioningRealm" 
			isInternalDeviceID="true" step="2"/> </customSecurityTest> -->
		<customSecurityTest name="WLADFlowOfficeSecurityTest">
			<test isInternalUserID="true" realm="WLADFlowOfficeRealm" />
		</customSecurityTest>
		<customSecurityTest name="LDAPSecurityTest">
			<test isInternalUserID="true" realm="LDAPRealm" />
		</customSecurityTest>

		<customSecurityTest name="SubscribeServlet">
			<test realm="SubscribeServlet" isInternalUserID="true" />
		</customSecurityTest>

		<customSecurityTest name="LoginAdapterSecurityTest">
			<test isInternalUserID="true" realm="LoginRealm" />
		</customSecurityTest>

	</securityTests>

	<realms>

		<realm loginModule="LoginModule" name="LoginRealm">
			<className>com.worklight.integration.auth.AdapterAuthenticator</className>
			<parameter name="login-function" value="LoginAdapter.onAuthRequired" />
			<parameter name="logout-function" value="LoginAdapter.onLogout" />
		</realm>

		<realm name="WLADFlowOfficeRealm" loginModule="LDAPLoginModule">
			<className>com.worklight.core.auth.ext.FormBasedAuthenticator</className>
		</realm>
		<realm loginModule="LDAPLoginModule" name="LDAPRealm">
			<className>com.worklight.core.auth.ext.FormBasedAuthenticator</className>
			<onLoginUrl>/console</onLoginUrl>
		</realm>
		<realm name="SampleAppRealm" loginModule="StrongDummy">
			<className>com.worklight.core.auth.ext.FormBasedAuthenticator</className>
		</realm>

		<realm name="WorklightConsole" loginModule="requireLogin">
			<className>com.worklight.core.auth.ext.FormBasedAuthenticator</className>
			<onLoginUrl>/console</onLoginUrl>
		</realm>

		<realm name="SubscribeServlet" loginModule="rejectAll">
			<className>com.worklight.core.auth.ext.HeaderAuthenticator</className>
		</realm>

		<!-- For websphere -->
		<!-- realm name="WASLTPARealm" loginModule="WASLTPAModule"> <className>com.worklight.core.auth.ext.WebSphereFormBasedAuthenticator</className> 
			<parameter name="login-page" value="/login.html"/> <parameter name="error-page" 
			value="/loginError.html"/> </realm -->

		<!-- For User Certificate Authentication -->
		<!-- realm name="wl_userCertificateAuthRealm" loginModule="WLUserCertificateLoginModule"> 
			<className>com.worklight.core.auth.ext.UserCertificateAuthenticator</className> 
			<parameter name="dependent-user-auth-realm" value="WASLTPARealm" /> <parameter 
			name="pki-bridge-class" value="com.worklight.core.auth.ext.UserCertificateEmbeddedPKI" 
			/> <parameter name="embedded-pki-bridge-ca-p12-file-path" value="/opt/ssl_ca/ca.p12"/> 
			<parameter name="embedded-pki-bridge-ca-p12-password" value="capassword" 
			/> </realm -->

	</realms>

	<loginModules>

		<loginModule name="LoginModule">
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
		</loginModule>

		<loginModule name="StrongDummy">
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
		</loginModule>

		<loginModule name="requireLogin">
			<className>com.worklight.core.auth.ext.SingleIdentityLoginModule</className>
		</loginModule>

		<loginModule name="rejectAll">
			<className>com.worklight.core.auth.ext.RejectingLoginModule</className>
		</loginModule>
		<!-- <loginModule name="LDAPLoginModule"> <className>com.worklight.core.auth.ext.LdapLoginModule</className> 
			<parameter name="ldapProviderUrl" value="ldap://192.168.0.171" /> <parameter 
			name="ldapTimeoutMs" value="2000" /> <parameter name="ldapSecurityAuthentication" 
			value="simple" /> <parameter name="validationType" value="searchPattern" 
			/> <parameter name="ldapSecurityPrincipalPattern" value="cn={username},ou=consumers,dc=acmeshop,dc=com" 
			/> <parameter name="ldapSearchFilterPattern" value="(&amp;(objectClass=groupOfUniqueNames)(uniqueMember=cn={username},ou=consumers,dc=acmeshop,dc=com))" 
			/> <parameter name="ldapSearchBase" value="dc=acmeshop,dc=com" /> <parameter 
			name="ldapSearchBase" value="dc=acmeshop,dc=com" /> </loginModule> -->

		<loginModule name="LDAPLoginModule">
			<className>com.worklight.core.auth.ext.LdapLoginModule</className>

			<parameter name="ldapProviderUrl" value="ldap://192.168.0.20" />
			<parameter name="ldapTimeoutMs" value="2000" />
			<parameter name="ldapSecurityAuthentication" value="simple" />
			<parameter name="validationType" value="searchPattern" />
			<parameter name="ldapSecurityPrincipalPattern"
				value="cn={username},ou=employee,dc=adflow,dc=co,dc=kr" />
			<parameter name="ldapSearchFilterPattern"
				value="(&amp;(objectClass=groupOfUniqueNames)(uniqueMember=cn={username},ou=employee,dc=adflow,dc=co,dc=kr))" />
			<parameter name="ldapSearchBase" value="dc=adflow,dc=co,dc=kr" />
			<!-- parameter name="ldapSecurityPrincipalPattern" value="cn={username},ou=developers,dc=acmeshop,dc=com" 
				/> <parameter name="ldapSearchFilterPattern" value="(&(objectClass=inetOrgPerson))" 
				/ -->
			<parameter name="ldapSearchBase" value="dc=acmeshop,dc=com" />
		</loginModule>
		<!-- For websphere -->
		<!-- loginModule name="WASLTPAModule"> <className>com.worklight.core.auth.ext.WebSphereLoginModule</className> 
			</loginModule -->

		<!-- Login module for User Certificate Authentication -->
		<!-- <loginModule name="WLUserCertificateLoginModule"> <className>com.worklight.core.auth.ext.UserCertificateLoginModule</className> 
			</loginModule> -->


		<!-- For enabling SSO with no-provisioning device authentication -->
		<!-- <loginModule name="MySSO" ssoDeviceLoginModule="WLDeviceNoProvisioningLoginModule"> 
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className> 
			</loginModule> -->


		<!-- For enabling SSO with auto-provisioning device authentication -->
		<!-- <loginModule name="MySSO" ssoDeviceLoginModule="WLDeviceAutoProvisioningLoginModule"> 
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className> 
			</loginModule> -->
	</loginModules>

</tns:loginConfiguration>
